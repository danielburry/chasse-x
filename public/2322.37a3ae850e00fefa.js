"use strict";var St=Object.defineProperty,Ye=Object.getOwnPropertySymbols,Mt=Object.prototype.hasOwnProperty,Rt=Object.prototype.propertyIsEnumerable,Je=(Y,G,p)=>G in Y?St(Y,G,{enumerable:!0,configurable:!0,writable:!0,value:p}):Y[G]=p,Ve=(Y,G)=>{for(var p in G||(G={}))Mt.call(G,p)&&Je(Y,p,G[p]);if(Ye)for(var p of Ye(G))Rt.call(G,p)&&Je(Y,p,G[p]);return Y};(self.webpackChunkchasse_pwa_front=self.webpackChunkchasse_pwa_front||[]).push([[2322],{14658:(Y,G,p)=>{function K(){return new Float32Array(3)}function W(E,I,D){const b=new Float32Array(3);return b[0]=E,b[1]=I,b[2]=D,b}function H(){return K()}function Z(){return W(1,1,1)}function A(){return W(1,0,0)}function F(){return W(0,1,0)}function k(){return W(0,0,1)}p.d(G,{c:()=>K,f:()=>W});const M=H(),ae=Z(),ne=A(),te=F(),se=k();Object.freeze(Object.defineProperty({__proto__:null,create:K,clone:function O(E){const I=new Float32Array(3);return I[0]=E[0],I[1]=E[1],I[2]=E[2],I},fromValues:W,createView:function re(E,I){return new Float32Array(E,I,3)},zeros:H,ones:Z,unitX:A,unitY:F,unitZ:k,ZEROS:M,ONES:ae,UNIT_X:ne,UNIT_Y:te,UNIT_Z:se},Symbol.toStringTag,{value:"Module"}))},65629:(Y,G,p)=>{p.d(G,{SR:()=>k,Ui:()=>F});var K=p(62208),O=p(65401),W=p(32442),re=p(25748),H=p(91179),Z=p(74618),A=p(37053);function F(x){return M(x,!0)}function k(x){return M(x,!1)}function M(x,u){if((0,K.Wi)(x))return null;const g=x.spatialReference,m=(0,A.C5)(g),c="toJSON"in x?x.toJSON():x;if(!m)return c;const _=(0,A.sS)(g)?102100:4326,T=Z.UZ[_].maxX,S=Z.UZ[_].minX;if((0,H.wp)(c))return ne(c,T,S);if((0,H.aW)(c))return c.points=c.points.map(B=>ne(B,T,S)),c;if((0,H.YX)(c))return function ae(x,u){if(!u)return x;const g=function te(x,u){const g=[],{ymin:m,ymax:c,xmin:_,xmax:T}=x,S=x.xmax-x.xmin,[B,L]=u.valid,{x:P,frameId:V}=se(x.xmin,u),{x:N,frameId:j}=se(x.xmax,u),Le=P===N&&S>0;if(S>2*L){const pe={xmin:_<T?P:N,ymin:m,xmax:L,ymax:c},me={xmin:B,ymin:m,xmax:_<T?N:P,ymax:c},ye={xmin:0,ymin:m,xmax:L,ymax:c},ge={xmin:B,ymin:m,xmax:0,ymax:c},oe=[],ie=[];w(pe,ye)&&oe.push(V),w(pe,ge)&&ie.push(V),w(me,ye)&&oe.push(j),w(me,ge)&&ie.push(j);for(let J=V+1;J<j;J++)oe.push(J),ie.push(J);g.push(new D(pe,[V]),new D(me,[j]),new D(ye,oe),new D(ge,ie))}else P>N||Le?g.push(new D({xmin:P,ymin:m,xmax:L,ymax:c},[V]),new D({xmin:B,ymin:m,xmax:N,ymax:c},[j])):g.push(new D({xmin:P,ymin:m,xmax:N,ymax:c},[V]));return g}(x,u).map(m=>m.extent);return g.length<2?g[0]||x:g.length>2?(x.xmin=u.valid[0],x.xmax=u.valid[1],x):{rings:g.map(m=>[[m.xmin,m.ymin],[m.xmin,m.ymax],[m.xmax,m.ymax],[m.xmax,m.ymin],[m.xmin,m.ymin]])}}(c,m);if((0,H.oU)(c)||(0,H.l9)(c)){const B=(0,W.$P)(b,c),L={xmin:B[0],ymin:B[1],xmax:B[2],ymax:B[3]},P=(0,Z.XZ)(L.xmin,S)*(2*T),V=0===P?c:(0,Z.Sy)(c,P);return L.xmin+=P,L.xmax+=P,L.xmax>T?I(V,T,u):L.xmin<S?I(V,S,u):V}return c}function ne(x,u,g){if(Array.isArray(x)){const m=x[0];if(m>u){const c=(0,Z.XZ)(m,u);x[0]=m+c*(-2*u)}else if(m<g){const c=(0,Z.XZ)(m,g);x[0]=m+c*(-2*g)}}else{const m=x.x;if(m>u){const c=(0,Z.XZ)(m,u);x.x+=c*(-2*u)}else if(m<g){const c=(0,Z.XZ)(m,g);x.x+=c*(-2*g)}}return x}function se(x,u){const[g,m]=u.valid,c=2*m;let _,T=0;return x>m?(_=Math.ceil(Math.abs(x-m)/c),x-=_*c,T=_):x<g&&(_=Math.ceil(Math.abs(x-g)/c),x+=_*c,T=-_),{x,frameId:T}}function w(x,u){const{xmin:g,ymin:m,xmax:c,ymax:_}=u;return E(x,g,m)&&E(x,g,_)&&E(x,c,_)&&E(x,c,m)}function E(x,u,g){return u>=x.xmin&&u<=x.xmax&&g>=x.ymin&&g<=x.ymax}function I(x,u,g=!0){const m=!(0,H.l9)(x);if(m&&(0,re.Zy)(x),g)return(new R).cut(x,u);const c=m?x.rings:x.paths,_=m?4:2,T=c.length,S=-2*u;for(let B=0;B<T;B++){const L=c[B];if(L&&L.length>=_){const P=[];for(const V of L)P.push([V[0]+S,V[1]]);c.push(P)}}return m?x.rings=c:x.paths=c,x}class D{constructor(u,g){this.extent=u,this.frameIds=g}}const b=(0,O.Ue)();class R{constructor(){this.linesIn=[],this.linesOut=[]}cut(u,g){let m;if(this.xCut=g,u.rings)this.closed=!0,m=u.rings,this.minPts=4;else{if(!u.paths)return null;this.closed=!1,m=u.paths,this.minPts=2}for(const _ of m){if(!_||_.length<this.minPts)continue;let T=!0;for(const S of _)T?(this.moveTo(S),T=!1):this.lineTo(S);this.closed&&this.close()}this._pushLineIn(),this._pushLineOut(),m=[];for(const _ of this.linesIn)_&&_.length>=this.minPts&&m.push(_);const c=-2*this.xCut;for(const _ of this.linesOut)if(_&&_.length>=this.minPts){for(const T of _)T[0]+=c;m.push(_)}return this.closed?u.rings=m:u.paths=m,u}moveTo(u){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(u[0]),this._moveTo(u[0],u[1],this._prevSide),this._prevPt=u,this._firstPt=u}lineTo(u){const g=this._side(u[0]);if(g*this._prevSide==-1){const m=this._intersect(this._prevPt,u);this._lineTo(this.xCut,m,0),this._prevSide=0,this._lineTo(u[0],u[1],g)}else this._lineTo(u[0],u[1],g);this._prevSide=g,this._prevPt=u}close(){const u=this._firstPt,g=this._prevPt;u[0]===g[0]&&u[1]===g[1]||this.lineTo(u),this._checkClosingPt(this.lineIn),this._checkClosingPt(this.lineOut)}_moveTo(u,g,m){this.closed?(this.lineIn.push([m<=0?u:this.xCut,g]),this.lineOut.push([m>=0?u:this.xCut,g])):(m<=0&&this.lineIn.push([u,g]),m>=0&&this.lineOut.push([u,g]))}_lineTo(u,g,m){this.closed?(this._addPolyVertex(this.lineIn,m<=0?u:this.xCut,g),this._addPolyVertex(this.lineOut,m>=0?u:this.xCut,g)):m<0?(0===this._prevSide&&this._pushLineOut(),this.lineIn.push([u,g])):m>0?(0===this._prevSide&&this._pushLineIn(),this.lineOut.push([u,g])):this._prevSide<0?(this.lineIn.push([u,g]),this.lineOut.push([u,g])):this._prevSide>0&&(this.lineOut.push([u,g]),this.lineIn.push([u,g]))}_addPolyVertex(u,g,m){const c=u.length;c>1&&u[c-1][0]===g&&u[c-2][0]===g?u[c-1][1]=m:u.push([g,m])}_checkClosingPt(u){const g=u.length;g>3&&u[0][0]===this.xCut&&u[g-2][0]===this.xCut&&u[1][0]===this.xCut&&(u[0][1]=u[g-2][1],u.pop())}_side(u){return u<this.xCut?-1:u>this.xCut?1:0}_intersect(u,g){return u[1]+(this.xCut-u[0])/(g[0]-u[0])*(g[1]-u[1])}_pushLineIn(){this.lineIn&&this.lineIn.length>=this.minPts&&this.linesIn.push(this.lineIn),this.lineIn=[]}_pushLineOut(){this.lineOut&&this.lineOut.length>=this.minPts&&this.linesOut.push(this.lineOut),this.lineOut=[]}}},55051:(Y,G,p)=>{p.d(G,{Z:()=>E});var K=p(7441),O=p(30217),W=p(49966),re=p(9545),H=p(14658),Z=p(13924),A=p(57477),F=p(64288),k=p(83994),M=p(67969),ae=p(49353);const ne=Math.PI/180;class se extends A.s{constructor(D){super(),this._dvsMat3=(0,W.c)(),this._localOrigin={x:0,y:0},this._getBounds=D}destroy(){this._vao&&(this._vao.dispose(!0),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program&&(this._program.dispose(),this._program=null)}doRender(D){const{context:b}=D,R=this._getBounds();if(R.length<1)return;this._createShaderProgram(b),this._updateMatricesAndLocalOrigin(D),this._updateBufferData(b,R),b.setBlendingEnabled(!0),b.setDepthTestEnabled(!1),b.setStencilWriteMask(0),b.setStencilTestEnabled(!1),b.setBlendFunction(M.zi.ONE,M.zi.ONE_MINUS_SRC_ALPHA),b.setColorMask(!0,!0,!0,!0);const x=this._program;b.bindVAO(this._vao),b.useProgram(x),x.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),b.gl.lineWidth(1),b.drawElements(M.MX.LINES,8*R.length,M.g.UNSIGNED_INT,0),b.bindVAO()}_createTransforms(){return{dvs:(0,W.c)()}}_createShaderProgram(D){this._program||(this._program=D.programCache.acquire("precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }","precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }",w().attributes))}_updateMatricesAndLocalOrigin(D){const{state:b}=D,{displayMat3:R,size:x,resolution:u,pixelRatio:g,rotation:m,viewpoint:c}=b,_=ne*m,{x:T,y:S}=c.targetGeometry,B=(0,Z.or)(T,b.spatialReference);this._localOrigin.x=B,this._localOrigin.y=S;const L=g*x[0],P=g*x[1],V=u*L,N=u*P,j=(0,O.b)(this._dvsMat3);(0,O.m)(j,j,R),(0,O.c)(j,j,(0,re.f)(L/2,P/2)),(0,O.d)(j,j,(0,H.f)(x[0]/V,-P/N,1)),(0,O.r)(j,j,-_)}_updateBufferData(D,b){const{x:R,y:x}=this._localOrigin,g=new Float32Array(8*b.length),m=new Uint32Array(8*b.length);let c=0,_=0;for(const T of b)T&&(g[2*c+0]=T[0]-R,g[2*c+1]=T[1]-x,g[2*c+2]=T[0]-R,g[2*c+3]=T[3]-x,g[2*c+4]=T[2]-R,g[2*c+5]=T[3]-x,g[2*c+6]=T[2]-R,g[2*c+7]=T[1]-x,m[_+0]=c+0,m[_+1]=c+3,m[_+2]=c+3,m[_+3]=c+2,m[_+4]=c+2,m[_+5]=c+1,m[_+6]=c+1,m[_+7]=c+0,c+=4,_+=8);if(this._vertexBuffer?this._vertexBuffer.setData(g.buffer):this._vertexBuffer=k.f.createVertex(D,M.l1.DYNAMIC_DRAW,g.buffer),this._indexBuffer?this._indexBuffer.setData(m):this._indexBuffer=k.f.createIndex(D,M.l1.DYNAMIC_DRAW,m),!this._vao){const T=w();this._vao=new ae.U(D,T.attributes,T.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}}const w=()=>(0,F.cM)("bounds",{geometry:[{location:0,name:"a_position",count:2,type:M.g.FLOAT}]});class E extends K.T{constructor(D){super(D),this.hasHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer&&(this._boundsRenderer.destroy(),this._boundsRenderer=null)}enableRenderingBounds(D){this._boundsRenderer=new se(D),this.requestRender()}get hasLabels(){return!1}onTileData(D,b){D.patch(b),this.contains(D)||this.addChild(D),this.requestRender()}onTileError(D){D.clear(),this.contains(D)||this.addChild(D)}_renderChildren(D,b){for(const R of this.children)R.isReady&&R.hasData&&(R.commit(D),D.context.setStencilFunction(M.wb.EQUAL,R.stencilRef,255),R._displayList.replay(D,R,b))}}},35627:(Y,G,p)=>{p.d(G,{Z:()=>Ft});var K=p(15861),O=p(17626),W=p(14517),re=p(986),H=p(80542),Z=p(8314),A=p(62208),F=p(10699),k=p(32917),M=p(77712),te=(p(85931),p(90912),p(76898)),se=p(65234),w=p(65401),E=p(25748),I=p(91179),D=p(65629),b=p(37053),R=p(82959),x=p(35909),u=p(8080),g=p(39351),m=p(39406);const c=-1;class _{constructor(){this._dirties=[{vertexFrom:c,vertexCount:c,indexFrom:c,indexCount:c,allDirty:!1},{vertexFrom:c,vertexCount:c,indexFrom:c,indexCount:c,allDirty:!1},{vertexFrom:c,vertexCount:c,indexFrom:c,indexCount:c,allDirty:!1},{vertexFrom:c,vertexCount:c,indexFrom:c,indexCount:c,allDirty:!1},{vertexFrom:c,vertexCount:c,indexFrom:c,indexCount:c,allDirty:!1}]}hasDirty(){return this._dirties.some(e=>e.indexCount!==c||e.allDirty)}markAllClean(){for(const e of this._dirties)e.indexFrom=c,e.indexCount=c,e.vertexFrom=c,e.vertexCount=c,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:n,allDirty:a}=this._dirties[t],h={};let d,f=!1;(a||n!==c&&r>0)&&(h.geometry={count:r,from:n,allDirty:a},f=!0),(a||i!==c&&s>0)&&(d={count:s,from:i,allDirty:a},f=!0),f&&e({indices:d,vertices:h},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,n=s;if(!i.allDirty)if(i.indexCount!==c){const a=Math.min(i.indexFrom,r),h=Math.max(i.indexFrom+i.indexCount,r+n)-a;i.indexFrom=a,i.indexCount=h}else i.indexFrom=r,i.indexCount=n}markDirtyVertices(e,t,s,i){const r=this._dirties[e],n=s,a=i;if(!r.allDirty)if(r.vertexCount!==c){const h=Math.min(r.vertexFrom,n),d=Math.max(r.vertexFrom+r.vertexCount,n+a)-h;r.vertexFrom=h,r.vertexCount=d}else r.vertexFrom=n,r.vertexCount=a}}class T{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;){const h=null!==n?n.from:this._parent._size;e>=(null!==r?r.from+r.count:0)&&e+t<=h?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class S{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new T(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const r=null!==t.prev?this._freeHead:t.next;S._removeRange(t),this._freeHead=r}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const n=r.from,a=r.count;S._fuse(r,i),S._removeRange(i),this._bookKeeper.rangeResized(r,n,a),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const n=s.from,a=s.count;S._fuse(s,r),S._removeRange(r),this._bookKeeper.rangeResized(s,n,a),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var B=p(64288);const L=["FILL","LINE","MARKER","TEXT","LABEL"];class N{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new S(i):null,idxFreeList:i?new S(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const n in e[r])this._freeListsAndStorage[r].vertexBuffers[n]={data:i?(0,B.C$)(i,e[r][n]):null,stride:e[r][n]}}}static fromTileData(e,t){const s=function P(o){const e=o.getStrides(),t={};for(let s=0;s<e.length;s++)t[L[s]]=e[s];return t}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const h of n)for(const d of h.displayRecords)i[d.geometryType]=Math.max(i[d.geometryType],d.vertexFrom+d.vertexCount),r[d.geometryType]=Math.max(r[d.geometryType],d.indexFrom+d.indexCount);const a=new N(s,e.tileDisplayData.displayList,t,null);for(let h=0;h<e.tileBufferData.geometries.length;++h){const d=i[h],f=r[h],l=e.tileBufferData.geometries[h],v=a._storageFor(L[h]),C=e.tileBufferData.geometries[h].indexBuffer;let U;v.indexBuffer=C,v.idxFreeList=new S(C.length),v.idxFreeList.allocate(f);for(const X in l.vertexBuffer){const $=e.tileBufferData.geometries[h].vertexBuffer[X];v.vertexBuffers[X].data=$.data,v.vertexBuffers[X].stride=$.stride;const Ge=(0,B.Y8)($.stride),we=$.data.length*Ge/$.stride;U||(U=we)}v.vtxFreeList=new S(U),v.vtxFreeList.allocate(d)}return a}delete(e){const t=L[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=L[e.geometryType];let a,h;e.meshData=null,void 0===e.vertexFrom?(h=t.vertexCount,a=this._allocateVertices(n,h)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),h=t.vertexCount,a=this._allocateVertices(n,h)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,h=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,h=t.vertexCount);let d,f,l,y=!0;if(void 0===e.indexFrom?(d=r,l=t.indexCount,f=this._allocateIndices(n,l)):t.indexCount>e.indexCount?(d=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),l=t.indexCount,f=this._allocateIndices(n,l)):t.indexCount===e.indexCount?(y=!1,f=e.indexFrom,l=e.indexCount):(d=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),f=e.indexFrom,l=t.indexCount),-1!==a&&-1!==f){const v=this._storageFor(n);if((0,B.wO)(a,f,v.vertexBuffers,v.indexBuffer,t,s,i),e.vertexFrom=a,e.indexFrom=f,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const C in s)this._dirtyMap.markDirtyVertices(e.geometryType,C,e.vertexFrom,e.vertexCount)}return y&&this._displayList.addToList(e,d),!0}return-1!==a&&this._freeVertices(n,a,h),-1!==f&&this._freeIndices(n,f,l),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=L[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const a=this._allocateIndices(r,e.indexCount);if(-1===a)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,a,e.indexCount),!1;const h=this._storageFor(r);if((0,B.wO)(n,a,h.vertexBuffers,h.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const d in s)this._dirtyMap.markDirtyVertices(e.geometryType,d,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var j=p(83994),Le=p(67969),pe=p(49353);class me{constructor(e){this.geometryMap=(0,B.Mk)(()=>({indexBuffer:j.f.createIndex(e,Le.l1.STATIC_DRAW),vao:null}),(t,s)=>({vertexBuffer:j.f.createVertex(e,B.mR[s])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const s in t.buffers)t.buffers[s]&&t.buffers[s].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(s,i,r){if(!t.data.vao){const n={};for(const a in t.buffers)n[a]=t.buffers[a].data.vertexBuffer;t.data.vao=new pe.U(s,r,i,n,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((s,i)=>{this._upload(s,i,e)})}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const r in i){const n=i[r];n.allDirty?this._uploadVertices(s,t,r):null!=n.from&&null!=n.count&&this._uploadVertices(s,t,r,n.from,n.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const a=e.geometries[t].vertexBuffer[s];if(!a)return;const h=a.stride,d=a.data.buffer;n.buffers[s]&&d.byteLength>0&&(null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(d,i*h,i*h,(i+r)*h):n.buffers[s].data.vertexBuffer.setData(d))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const a=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&a.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(a,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(a))}}var ye=p(29443);class ge extends ye.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new _}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new _,this._dispRecStore=N.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new me(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=N.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);for(const r of i){const n=this._data.tileDisplayData.displayObjectRegistry.get(r);if(n){this._data.tileDisplayData.displayList.removeFromList(n.displayRecords);for(const h of n.displayRecords)this._dispRecStore.delete(h);this._data.tileDisplayData.displayObjectRegistry.delete(r);const a=this._data.tileDisplayData.displayObjects.indexOf(n);this._data.tileDisplayData.displayObjects.splice(a,1)}}for(const r of s){let n,a=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(a){const d=a.displayRecords;a.set(r),a.displayRecords=d;const f=a.displayRecords.length;for(let l=0;l<f;++l){const y=a.displayRecords[l],v=r.displayRecords[l];(l>=r.displayRecords.length||y.geometryType!==v.geometryType||y.symbolLevel!==v.symbolLevel||y.zOrder!==v.zOrder||y.materialKey!==v.materialKey)&&(this._dispRecStore.delete(a.displayRecords[l]),l<r.displayRecords.length&&(a.displayRecords[l]=void 0))}a.displayRecords.length=r.displayRecords.length}else{let d;a=r.copy(),a.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,a);const f=this._data.tileDisplayData.displayObjects;if(null!=a.insertAfter)if(n={},a.insertAfter>=0){const l=this._data.tileDisplayData.displayObjectRegistry.get(a.insertAfter);l?(d=f.indexOf(l)+1,d<f.length?f.splice(d,0,a):(f.push(a),d=f.length)):(f.push(a),d=f.length)}else f.unshift(a),d=0;else f.push(a),d=f.length;if(n){const l=r.displayRecords.length>0?1:0;let y=0;for(let v=d-1;v>=0&&y<l;--v)for(let C=f[v].displayRecords.length-1;C>=0&&y<l;--C){const U=f[v].displayRecords[C],X=this._data.tileDisplayData.displayList.getDPInfoType();n[X]||(n[X]=U,++y)}}}const h=r.displayRecords.length;for(let d=0;d<h;++d){const f=r.displayRecords[d];let l=a.displayRecords[d];l?(l.meshData=f.meshData,l.materialKey=f.materialKey):(l=f.copy(),l.vertexFrom=void 0,l.indexFrom=void 0,a.displayRecords[d]=l);const y=f.geometryType,v=this._data.tileDisplayData.displayList.getDPInfoType(),C=e.addOrUpdate.tileBufferData.geometries[y],U=C.vertexBuffer,X=C.indexBuffer;let $;n&&($=n[v]?this._data.tileDisplayData.displayList.splitAfter(n[v]):-1),t=this._dispRecStore.setMeshData(l,f,U,X,$)&&t,n&&null!=l.indexFrom&&null!=l.indexFrom&&(n[v]=l)}}return t}}class oe{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}class J{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new J;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const r in s.vertexBuffer){const{data:n,stride:a}=s.vertexBuffer[r];i.vertexBuffer[r]={data:n.slice(),stride:a}}}return e}static deserialize(e){const t=new J;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,B.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var Qe=p(18716);function be(o,e,t,...s){e<o.length?o.splice(e,t,...s):o.push(...s)}class Oe{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const n=r.geometryDPInfo.unified;if(n)for(const a of n){const{geometryType:h,materialKey:d,indexFrom:f,indexCount:l}=a,y=Qe.m2.load(d).symbologyType,v=e.painter.getBrush(h,y),C={geometryType:h,materialKey:d,indexFrom:f,indexCount:l,target:t.getGeometry(h)};v.prepareState(e,t),v.drawGeometry(e,t,C,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new Oe;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const n=t[r];if(n.geometryType===e.geometryType&&i>n.indexFrom&&i<=n.indexFrom+n.indexCount){if(i<n.indexFrom+n.indexCount){const a=new xe;a.geometryType=n.geometryType,a.materialKey=n.materialKey,a.indexFrom=i,a.indexCount=n.indexFrom+n.indexCount-i,t.splice(r+1,0,a),n.indexCount=i-n.indexFrom}return r}}}_addToList(e,t){const r=this._getDisplayList(e.symbolLevel,e.zOrder),n=null!=t?t:r.length-1,a=n>=0&&n<r.length?r[n]:null;if(null!==a&&a.materialKey===e.materialKey&&a.indexFrom+a.indexCount===e.indexFrom&&a.geometryType===e.geometryType)a.indexCount+=e.indexCount;else{const h=new xe;h.indexFrom=e.indexFrom,h.indexCount=e.indexCount,h.materialKey=e.materialKey,h.geometryType=e.geometryType,be(r,n+1,0,h)}}_removeFromList(e){const i=this._getDisplayList(e.symbolLevel,e.zOrder),r=i.length;let n;for(let a=0;a<r;++a){const h=i[a];if(e.indexFrom+e.indexCount>h.indexFrom&&e.indexFrom<h.indexFrom+h.indexCount&&h.geometryType===e.geometryType){n=a;break}}if(void 0!==n){const a=i[n];if(e.indexFrom===a.indexFrom)return a.indexCount-=e.indexCount,a.indexFrom+=e.indexCount,0===a.indexCount&&be(i,n,1),n-1;if(e.indexFrom+e.indexCount===a.indexFrom+a.indexCount)return a.indexCount-=e.indexCount,0===a.indexCount?(be(i,n,1),n-1):n;{const h=a.indexFrom,d=e.indexFrom-a.indexFrom,f=e.indexCount,l=a.indexFrom+a.indexCount-(e.indexFrom+e.indexCount);a.indexCount=d;const y=new xe;return y.geometryType=a.geometryType,y.materialKey=a.materialKey,y.indexFrom=h+d+f,y.indexCount=l,be(i,n+1,0,y),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let a=0;a<i;a++)if(this.symbolLevels[a].symbolLevel===e){s=this.symbolLevels[a];break}let r;s||(s=new Ue,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let a=0;a<n;a++)if(s.zLevels[a].zLevel===t){r=s.zLevels[a];break}return r||(r=new Ae,r.geometryDPInfo=new Te,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class xe{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new xe;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Te{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Te;return e.fill=this.fill&&this.fill.map(t=>t.clone()),e.line=this.line&&this.line.map(t=>t.clone()),e.marker=this.marker&&this.marker.map(t=>t.clone()),e.text=this.text&&this.text.map(t=>t.clone()),e.label=this.label&&this.label.map(t=>t.clone()),e.unified=this.unified&&this.unified.map(t=>t.clone()),e}}class Ae{constructor(){this.geometryDPInfo=new Te}clone(){const e=new Ae;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class Ue{constructor(){this.zLevels=[]}clone(){const e=new Ue;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class je{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}}class le{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new le(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new je;for(const r in t){const n=t[r].stride,a=t[r].data,h=[],d=(0,B.Y8)(n);for(let f=0;f<n*e.vertexCount/d;++f)h[f]=a[f+n*e.vertexFrom/d];i.vertexData.set(r,h)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new je;for(const s in e){const i=e[s].stride,r=e[s].data,n=[],a=(0,B.Y8)(i);for(let h=0;h<i*this.vertexCount/a;++h)n[h]=r[h+i*this.vertexFrom/a];this.meshData.vertexData.set(s,n)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){for(const r in t){const n=t[r].stride,a=this.meshData.vertexData.get(r),h=t[r].data,d=(0,B.Y8)(n);for(let f=0;f<n*this.meshData.vertexCount/d;++f)h[f+n*e/d]=a[f]}for(let r=0;r<this.meshData.indexData.length;++r)i[r+s]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new le(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function Ee(o,e){if(null!==e){o.push(e.length);for(const t of e)t.serialize(o);return o}o.push(0)}class he{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new he(this.id);return e.set(this),e}clone(){const e=new he(this.id);return e.displayRecords=this.displayRecords.map(t=>t.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),Ee(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new he(t);return s.displayRecords=function $e(o,e,t){const s=o.readInt32(),i=new Array(s);for(let r=0;r<i.length;r++)i[r]=e.deserialize(o,t);return i}(e,le,{id:t}),s}}class ve{get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new Oe;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new ve;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(t=>t.clone())),e}serialize(e){return Ee(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const n=he.deserialize(e);s[r]=n,i.set(n.id,n)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new ve;return t._deserializeObjects(e),t}}var ke=p(37633);class de{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,B.e2)(e.data,e.stride);return new de(t,e.stride)}static fromVertexVector(e){const t=(0,B.e2)(e.data.buffer(),e.stride);return new de(t,e.stride)}}class ce{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=de.decode(e.namedBuffers[r]);return new ce(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,B.e2)(e.vertices,e.stride),n={geometry:new de(i,e.stride)};return new ce(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const r in e.namedVectors)i[r]=de.fromVertexVector(e.namedVectors[r]);return new ce(t,s,i)}}var Be=p(75734);class qe{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const t=this.data.length/(this.stride/4);return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class et{constructor(e,t,s){this.geometryType=e,this.indexVector=new Be.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,B.$_)(e,s);for(const r in i){const n=i[r];let a;switch(n%4){case 0:case 2:a=new Be.Z(Uint32Array,n*t);break;case 1:case 3:a=new Be.Z(Uint8Array,n*t)}this.namedVectors[r]=new qe(a,n)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const r in this.namedVectors){const n=this.namedVectors[r];i[r]={},n.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=ce.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const Ie=new oe,ue=new oe;function st(o,e){const t={};for(const s in o){const i={data:(0,B.C$)(e,o[s]),stride:o[s]};t[s]=i}return t}class Q{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){Ie.reset();const e=function rt(o){const e=[[],[],[],[],[]],t=o;for(const s of t)for(const i of s.displayRecords)e[i.geometryType].push(i);return e}(this.tileDisplayData.displayObjects);for(const i of e)for(const r of i)r&&Ie.needMore(r.geometryType,r.meshData?r.meshData.vertexCount:r.vertexCount,r.meshData?r.meshData.indexData.length:r.indexCount);const t=e.length,s=new J;for(let i=0;i<t;++i){s.geometries[i].indexBuffer=new Uint32Array(Math.round(1.5*Ie.indicesFor(i)));const r=[];for(const d in this.tileBufferData.geometries[i].vertexBuffer)r.push(this.tileBufferData.geometries[i].vertexBuffer[d].stride);const n=Q._computeVertexAlignment(r),a=Math.round(1.5*Ie.verticesFor(i)),h=Q._align(a,n);for(const d in this.tileBufferData.geometries[i].vertexBuffer){const f=this.tileBufferData.geometries[i].vertexBuffer[d].stride;s.geometries[i].vertexBuffer[d]={stride:f,data:(0,B.C$)(h,f)}}}ue.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const r=e[i];for(const n of r){if(n.meshData)n.writeMeshDataToBuffers(ue.verticesFor(i),s.geometries[i].vertexBuffer,ue.indicesFor(i),s.geometries[i].indexBuffer),n.meshData=null;else{const a=this.tileBufferData.geometries[i].vertexBuffer,h=this.tileBufferData.geometries[i].indexBuffer,d=s.geometries[i].vertexBuffer,f=s.geometries[i].indexBuffer,l=ue.verticesFor(i),y=ue.indicesFor(i);(0,B.wO)(l,y,d,f,n,a,h),n.vertexFrom=l,n.indexFrom=y}ue.needMore(i,n.vertexCount,n.indexCount)}}for(const i of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(i.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new Q;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let r=0;for(let n=0;n<t;n++)r=Math.max(r,e[n].displayRecords.length);return 2*(12*e.length+e.length*r*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new Be.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const r of t)i.set(r.id,r);return(0,B.Z_)(r=>{const n=e.data[r];if((0,A.pC)(n)){const a=ke.$.from(n.records).getCursor();for(;a.next();){const h=a.id,d=a.materialKey,f=a.indexFrom,l=a.indexCount,y=a.vertexFrom,v=a.vertexCount,C=i.get(h),U=new le(h,r,d);U.indexFrom=f,U.indexCount=l,U.vertexFrom=y,U.vertexCount=v,C.displayRecords.push(U)}s[r]=ce.fromVertexData(n,r)}else s[r]=new et(r,0,m.mD.DEFAULT).intoBuffers()}),Q.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new Q,s=new ve,i=new J;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const n=e.vertexBuffersMap[r];i.geometries[r].indexBuffer=n.indexBuffer,i.geometries[r].vertexBuffer=n.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new Q;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new Q;s.tileDisplayData=new ve,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const d of e)for(const f of d.displayRecords)n[f.geometryType].push(f),i[f.geometryType]+=f.meshData.vertexCount,r[f.geometryType]+=f.meshData.indexData.length;const a=new J,h=function it(o){return[o.fill||{},o.line||{},o.icon||{},o.text||{},o.label||{}]}(t);for(let d=0;d<5;d++){const f=new Uint32Array(r[d]),l=st(h[d],i[d]);le.writeAllMeshDataToBuffers(n[d],l,f),a.geometries[d]={indexBuffer:f,vertexBuffer:l}}return s.tileBufferData=a,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var nt=p(55130),ot=p(246),at=p(1825),lt=p(32940),Ke=p(49391),ht=p(36682),dt=p(93872),_e=p(82054),ct=p(25208),ut=p(64822);class Fe extends ut.i{constructor(e,t){super(e,t,null)}static from(e,t){const s=ct.s.createInstance(),i=[],r=e.filter(n=>!!n.geometry);for(const n of r){const a=(0,I.Ji)(n.geometry);(0,_e.E7)(i,[n],a,!1,!1,t)}return new Fe(s,i)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Fe(this.instance,this._features);return this.copyInto(e),e}}var Se=p(23841),ft=p(76279),pt=p(32442),mt=p(13924),yt=p(89932),gt=p(27105),Me=p(7848),We=p(88071);const De=new We.Z,ze=new We.Z,He="esriGeometryPolyline";function Ne(o){o.coords.length=0,o.lengths.length=0}class q{constructor(){this.bounds=(0,w.Ue)(),this.graphic=null}static acquire(e=null,t,s,i,r){let n;return 0===q._pool.length?n=new q:(n=q._pool.pop(),this._set.delete(n)),n.acquire(e,t,s,i,r),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,I.oU)(e.geometry)){const s=e.symbol;if((0,A.Wi)(s))return null;if((null==s?void 0:s.layers.length)>0&&s.layers.some(i=>"text"===i.type||"marker"===i.type)){const i=(0,gt.tO)(e.geometry);return null!==i?(0,Me.RF)(t,{},{x:i[0],y:i[1]},!1,!1):null}}return null}acquire(e=null,t,s,i,r){e&&this.set(e,t,s,i,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r){this.graphic=e,this.geometry=s,this.symbolResource=t,this.bounds=i,r&&(this.size=r)}getGeometryQuantized(e,t,s,i){const r=this.geometry;if((0,I.oU)(r)){const n=r.rings;if(1===n.length&&2===n[0].length)return(0,Me.ym)(e,{paths:[[n[0][0],n[0][1]]]})}else{if((0,I.l9)(r))return Ne(De),Ne(ze),(0,_e.u0)(De,r),(0,_e.zj)(ze,De,r.hasZ,r.hasM,He,e.scale[0]),(0,_e.Nh)(De,ze,r.hasZ,r.hasM,He,e),(0,_e.J6)(De,r.hasZ,r.hasM);if((0,I.aW)(r)){const n=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),a=(0,b.C5)(s);let h=r.points;if(a){const[d,f]=a.valid,l=f-d;h=h.filter(y=>{if(y[0]+n>f||y[0]-n<d){const v=[...y];return y[0]+n>f?v[0]-=l:v[0]+=l,(0,w.Zm)(t,y,n)||(0,w.Zm)(t,v,n)}return(0,w.Zm)(t,y,n)})}return 0===h.length?{points:h}:(0,Me.ym)(e,{points:h})}}return(0,Me.ym)(e,this.geometry)}}q._pool=[],q._set=new Set;var z=p(64596);const Ce={minX:0,minY:0,maxX:0,maxY:0},fe=(0,w.Ue)();function Re(o,e,t,s,i){return Ce.minX=e,Ce.minY=t,Ce.maxX=s,Ce.maxY=i,o.search(Ce)}function xt(o){return{minX:o.bounds[0],minY:o.bounds[1],maxX:o.bounds[2],maxY:o.bounds[3]}}class vt{constructor(e,t,s,i,r,n,a){this._graphics=i,this._onAdd=r,this._onRemove=n,this._hashToCIM=a,this._index=(0,ft.r)(9,xt),this._itemByGraphic=new Map,this._inflatedSizeHelper=new x.IV,this._tileInfoView=e,this._uidFieldName=s;const h=e.getClosestInfoForScale(t);h&&(this._resolution=this._tileInfoView.getTileResolution(h.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new yt.Tu(e)}hitTest(e,t,s,i,r){e=(0,mt.or)(e,this._tileInfoView.spatialReference);const n=.5*i*window.devicePixelRatio*s;fe[0]=e-n,fe[1]=t-n,fe[2]=e+n,fe[3]=t+n;const a=.5*i*(s+z.y1),h=Re(this._index,e-a,t-a,e+a,t+a);if(!h||0===h.length)return[];const d=[],f=(0,w.Ue)(),l=(0,w.Ue)();for(const C of h){const{geometry:U,symbolResource:X}=C;this._getSymbolBounds(f,X,U,l,r),l[3]=l[2]=l[1]=l[0]=0,(0,w.kK)(f,fe)&&C.graphic.visible&&d.push(C)}if(0===d.length)return[];const y=this._hittestDrawHelper,v=[];for(const C of d){const{geometry:U,symbolResource:X}=C,{hash:$,textInfo:Ge}=X,we=this._hashToCIM.get($);we&&y.hitTest(fe,we.symbol,U,Ge,r,i)&&v.push(C)}return v.sort(_t),v.map(C=>C.graphic)}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort((l,y)=>l.zorder-y.zorder),i[0].insertAfter=-1;for(let l=1;l<i.length;l++)i[l].insertAfter=i[l-1].graphic.uid;i.sort((l,y)=>l.graphic.uid-y.graphic.uid),s.sort((l,y)=>l.uid-y.uid);let r,n=0,a=0;const h=t.resolution,d=[],f={originPosition:"upperLeft",scale:[h,h],translate:[t.bounds[0],t.bounds[3]]};for(const l of s){for(a=-2;n<i.length;)if(r=i[n],n++,l.uid===r.graphic.uid){a=r.insertAfter;break}if(!r.geometry||-2===a)continue;const y=r.getGeometryQuantized(f,t.bounds,this._tileInfoView.spatialReference,h),v=Ve({},r.graphic.attributes);v[this._uidFieldName]=l.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),d.push({centroid:q.getCentroidQuantized(r,f),geometry:y,attributes:v,symbol:r.symbol,groupId:r.groupId,insertAfter:a,zorder:r.zorder})}return d.sort((l,y)=>l.zorder-y.zorder),d}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter(e=>e.graphic.visible).map(e=>e.bounds)}addOrModify(e,t,s){if(!e||(0,A.Wi)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],r=this._getSymbolBounds(null,t,s,i,0),n=q.acquire(e,t,s,(0,A.pC)(r)?r:null,i);return this._itemByGraphic.set(e,n),s&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,w.d9)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,s,i.size,0);return(0,A.pC)(n)&&i.set(e,t,s,n,i.size),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,s=[];for(const[i,r]of t){const n=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&(0,A.pC)(n)&&(r.bounds=n,s.push(r))}this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName,a=this._tileInfoView.spatialReference,{bounds:h,resolution:d}=r;let f,l,y,v;s.sort((C,U)=>C.zorder-U.zorder);for(let C=0;C<s.length;C++){y=s[C],f=y.graphic,l=y.getGeometryQuantized(i,h,a,d),v=0===C?-1:s[C-1].graphic.uid;const U=Ve({},y.graphic.attributes);U[n]=f.uid,null==y.groupId&&(y.groupId=t.createTemplateGroup(y.symbol,null)),e.push({centroid:q.getCentroidQuantized(y,i),geometry:l,attributes:U,symbol:y.symbol,groupId:y.groupId,insertAfter:v,zorder:y.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds;if(t.isWrappable){const[i,r]=(0,b.C5)(t).valid,n=Math.abs(s[2]-r)<1e-5,a=Math.abs(s[0]-i)<1e-5;if((!n||!a)&&(n||a)){const h=e.resolution;let d;d=(0,w.Ue)(n?[i,s[1],i+h*z.y1,s[3]]:[r-h*z.y1,s[1],r,s[3]]);const f=Re(this._index,s[0],s[1],s[2],s[3]),l=Re(this._index,d[0],d[1],d[2],d[3]);return[...new Set([...f,...l])]}}return Re(this._index,s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbol||!s)return null;if(e||(e=(0,w.Ue)()),(0,pt.$P)(e,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:h,textInfo:d}=t,f=this._hashToCIM.get(h);if(!f)return null;i||(i=[0,0,0,0]);const l=this._inflatedSizeHelper.getSymbolInflateSize(i,f.symbol,this._cimResourceManager,r,d);i[0]=(0,Se.F2)(l[0]),i[1]=(0,Se.F2)(l[1]),i[2]=(0,Se.F2)(l[2]),i[3]=(0,Se.F2)(l[3])}const n=this._resolution,a=x.IV.safeSize(i);return e[0]-=a*n,e[1]-=a*n,e[2]+=a*n,e[3]+=a*n,e}}const _t=(o,e)=>{const t=(0,z.eT)(o.graphic),s=(0,z.eT)(e.graphic);return t===s?e.zorder-o.zorder:t-s};var Dt=p(11263),Ct=p(61996);const bt=o=>{let e=class extends((0,Ct.IG)(o)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,O._)([(0,M.Cb)()],e.prototype,"graphics",void 0),(0,O._)([(0,M.Cb)()],e.prototype,"renderer",void 0),(0,O._)([(0,M.Cb)()],e.prototype,"updating",void 0),(0,O._)([(0,M.Cb)()],e.prototype,"view",void 0),e=(0,O._)([(0,te.j)("esri.views.layers.GraphicsView")],e),e};var Tt=p(31637),Bt=p(3250);const It=(0,Z.Z)("esri-2d-graphic-debug");function Pe(o,e,t){if(t.has(o))return t.get(o);const s={tile:e,addedOrModified:[],removed:[]};return t.set(o,s),s}let ee=class extends(bt((0,H.p)(W.Z))){constructor(o){super(o),this._storage=new dt.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(o,e,t){if(o){const s=(0,Ke.MD)({indexCount:0,fields:{}},"feature",o);this._matcher=(0,lt.fL)(s,e,null,t)}}_createDisplayId(o){return this._displayIds.has(o)||this._displayIds.set(o,this._storage.createDisplayId()),this._displayIds.get(o)}initialize(){this._attributeStore=new ht.Z({type:"local",initialize:i=>Promise.resolve(this.container.attributeView.initialize(i)),update:i=>this.container.attributeView.requestUpdate(i),render:()=>this.container.requestRender()},(0,Tt.hc)("2d"),()=>this.notifyChange("updating")),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const t=new at.Wr(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new vt(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,i=>{this._createDisplayId(i.uid),this._setFilterState(i.uid,i.visible)},i=>{const r=this._displayIds.get(i.uid);this._displayIds.delete(i.uid),this._storage.releaseDisplayId(r)},this._hashToCIM),this._meshFactory=new ot.j(null,this.uid,t),this._templateStore=t,this.handles.add([(0,k.YP)(()=>this.renderer,i=>{this._createMatcher(i,t,this.container.stage.resourceManager);for(const r of this.graphics)this._pendingUpdate.updated.add(r);this.requestUpdate()}),this.view.graphicsTileStore.on("update",i=>this._onTileUpdate(i)),this.container.on("attach",()=>{It&&this.container.enableRenderingBounds(()=>this._graphicStore.getAllBounds()),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",r=>this._graphicsChangeHandler(r)),"graphics");const i=this.container.stage.resourceManager;this._createMatcher(this.renderer,t,i),this._graphicStore.setResourceManager(i),this._attached=!0,this.notifyChange("updating")})]),this._onTileUpdate({added:this.view.graphicsTileStore.tiles,removed:[]})}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore.isUpdating()}hitTest(o){if(!this.view||!this.view.position)return[];const{resolution:e,rotation:t}=this.view.state;return this._graphicStore.hitTest(o.x,o.y,2,e,t)}update(o){(0,F.k_)(this._controller.signal);const e=o.state,{resolution:t}=e;if(this._graphicStore.updateLevel(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(o){this.updateRequested&&(this.updateRequested=!1,this.update(o))}graphicUpdateHandler(o){const{graphic:e,property:t,newValue:s}=o;switch(t){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(e),this.requestUpdate();break;case"visible":this._setFilterState(e.uid,s),this._attributeStore.sendUpdates()}}setHighlight(o){const e=o.map(t=>this._displayIds.get(t));this._attributeStore.setHighlight(o,e)}_getIntersectingTiles(o){const e=this._graphicStore.getBounds(o);if(!e||0===(0,w.bf)(e)||0===(0,w.Cb)(e))return[];const t=(0,z.Zu)(e,this.view.spatialReference);return(0,A.pC)(t)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(t[0]),...this.view.graphicsTileStore.boundsIntersections(t[1])])]:this.view.graphicsTileStore.boundsIntersections(e)}_updateTile(o){var e=this;return(0,K.Z)(function*(){(0,F.k_)(e._controller.signal);const t=o.tile,s=e._getGraphicsData(e._templateStore,t,o.addedOrModified),i=yield e._processGraphics(t,s);return(0,F.k_)(e._controller.signal),e._patchTile(t.key,{type:"update",addOrUpdate:i,remove:o.removed,end:!0,clear:!1,sort:!1}),i})()}_patchTile(o,e){if(!this._tiles.has(o))return;const t=this._tiles.get(o);this.container.onTileData(t,e),this.container.requestRender()}_graphicsChangeHandler(o){const e=this._pendingUpdate;for(const t of o.added)e.added.add(t);for(const t of o.moved)e.updated.add(t);for(const t of o.removed)this._pendingUpdate.added.has(t)?e.added.delete(t):e.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const o={added:[],removed:[],updated:[]};if(!this.graphics)return o;const e=this._pendingUpdate;for(const t of this.graphics.items)e.added.has(t)?o.added.push(t):e.updated.has(t)&&o.updated.push(t);for(const t of e.removed)this._graphicStore.has(t)&&o.removed.push(t);return e.added.clear(),e.removed.clear(),e.updated.clear(),o}_updateGraphics(){var o=this;return(0,K.Z)(function*(){o._processing=!0;const{added:e,removed:t,updated:s}=o._getGraphicsToUpdate(),i=o._tilesToUpdate;let r;try{if(!o._graphicStoreUpdate){const l=o.view.state,{resolution:y}=l;o._graphicStore.updateLevel(y)}const n=[],a=new Array(e.length+t.length);for(let l=0;l<s.length;l++){const y=s[l],v=o._getIntersectingTiles(y);for(const C of v)r=C.id,Pe(r,C,i).removed.push(o._displayIds.get(y.uid));n.push(o._updateGraphic(y,null)),a[l]=y}const h=s.length;for(let l=0;l<e.length;l++){const y=e[l];a[h+l]=y,o._graphicsSet.add(y),n.push(o._addGraphic(y))}for(const l of t){o._abortProcessingGraphic(l.uid);const y=o._getIntersectingTiles(l);for(const v of y)r=v.id,Pe(r,v,i).removed.push(o._displayIds.get(l.uid));o._graphicsSet.delete(l),o._graphicStore.remove(l)}let d;o._flipUpdatingGraphics(),yield Promise.all(n);for(let l=0;l<a.length;l++){d=a[l];const y=o._getIntersectingTiles(d);for(const v of y)r=v.id,Pe(r,v,i).addedOrModified.push(d)}o._graphicStore.updateZ();const f=[];for(const[l,y]of i)f.push(o._updateTile(y));yield Promise.all(f)}catch(n){(0,F.D_)(n)}for(const n of t)try{const a=yield o._getSymbolForGraphic(n,null);if(a){const h=a.hash();o._hashToExpandedSymbol.delete(h)}}catch(a){(0,F.D_)(a)}i.clear(),o.notifyChange("updating"),o._processing=!1,o._needsProcessing&&(o._needsProcessing=!1,o._updateGraphics())})()}_getArcadeInfo(o){const e=(o.attributes?Object.keys(o.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof o.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return(0,A.Wi)(o.geometry)?null:{geometryType:(0,I.Ji)(o.geometry),spatialReference:se.Z.fromJSON(o.geometry.spatialReference),fields:e}}_getSymbolForGraphic(o,e){return(0,F.k_)(this._controller.signal),(0,A.pC)(o.symbol)?Promise.resolve(o.symbol):(0,A.pC)(this.renderer)?this.renderer.getSymbolAsync(o,{scale:this.view.scale,signal:(0,A.pC)(e)?e.signal:null}):Promise.resolve(this._getNullSymbol(o))}_getCIMSymbol(o,e,t){let s=this._hashToCIM.get(e);if(s)return Promise.resolve(s);const i=(0,x.rW)(o);if((0,A.pC)(i)){if("CIMSymbolReference"===i.type)return s=i,this._hashToCIM.set(e,s),Promise.resolve(s);let r=this._hashToCIMSymbolPromise.get(e);return r||(r=i.fetchCIMSymbol(t).then(n=>(this._hashToCIM.set(e,n.data),this._hashToCIMSymbolPromise.delete(e),n)).catch(n=>(this._hashToCIMSymbolPromise.delete(e),(0,F.r9)(n),null)),this._hashToCIMSymbolPromise.set(e,r),r)}return Promise.resolve(null)}_expandCIMSymbol(o,e,t,s){const i=this._hashToExpandedSymbol.get(t);if(i)return Promise.resolve(i);let r=this._hashToExpandedSymbolPromise.get(t);if(r)return r;const n=this.container.stage,a=this._getArcadeInfo(e),h=(0,Ke.q5)(null),d=(0,Bt.createSymbolSchema)(o,h);return r=(0,Dt.B3)(d,a,n.resourceManager,s),this._hashToExpandedSymbolPromise.set(t,r),r.then(f=>(this._hashToExpandedSymbol.set(t,f),this._hashToExpandedSymbolPromise.delete(t),f)),r}_getSymbolResources(o,e){var t=this;return(0,K.Z)(function*(){return(0,F.k_)(t._controller.signal),t.container.stage?t._getSymbolForGraphic(o,e).then(s=>{const i=s.hash();return t._getCIMSymbol(s,i,e).then(r=>(0,A.Wi)(r)?null:t._expandCIMSymbol(r,o,i,e).then(n=>{const a=n.layers.filter(h=>"text"===h.type&&"string"==typeof h.text);if(a&&a.length>0){const h=new Array(a.length);for(let f=0;f<a.length;f++){const l=a[f],y=[],[v]=(0,re.E)(l.text);l.text=v;for(let C=0;C<v.length;C++)y.push(v.charCodeAt(C));h[f]={symbol:l,id:f,glyphIds:y}}const d=new Map;return t.container.getMaterialItems(h).then(f=>{for(let l=0;l<a.length;l++){const y=a[l];d.set(y.cim,{text:y.text,mosaicItem:f[l].mosaicItem})}return{symbol:n,textInfo:d,hash:i}})}return{symbol:n,hash:i}}))}).catch(s=>((0,F.r9)(s),null)):null})()}_projectAndNormalizeGeometry(o,e){var t=this;return(0,K.Z)(function*(){if((0,F.k_)(t._controller.signal),(0,A.Wi)(o.geometry)||"mesh"===o.geometry.type)return null;let s=o.geometry;if((0,I.oU)(s))s.rings=s.rings;else if((0,I.l9)(s))s.paths=s.paths;else if((0,I.YX)(s)){const n=yield t._getSymbolForGraphic(o,e);(0,F.k_)(t._controller.signal),s=(0,z.yA)(n.type)||(0,z.ab)(n.type)?s.center:(0,z.XA)(s)}yield(0,R._W)(s.spatialReference,t.view.spatialReference);const i=(0,D.SR)(s),r=(0,R.iV)(i,s.spatialReference,t.view.spatialReference);return(0,E.pW)(r),r})()}_onTileUpdate(o){const e=(0,b.C5)(this.view.spatialReference);if(o.added&&o.added.length>0)for(const t of o.added)this._addNewTile(t,e);if(o.removed&&o.removed.length>0)for(const t of o.removed)this._removeTile(t.key)}_addGraphic(o){var e=this;return(0,K.Z)(function*(){e._abortProcessingGraphic(o.uid),(0,F.k_)(e._controller.signal);const t=new AbortController;e._graphicIdToAbortController.set(o.uid,t);const s={signal:t.signal};try{yield e._addOrUpdateGraphic(o,s),(0,F.k_)(e._controller.signal),e._graphicIdToAbortController.delete(o.uid)}catch(i){if(e._graphicIdToAbortController.delete(o.uid),!(0,F.D_)(i))throw i}})()}_updateGraphic(o,e){(0,F.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(o,e),s=this._getSymbolResources(o,e);return Promise.all([t,s]).then(([i,r])=>{(0,F.k_)(this._controller.signal),this._graphicStore.addOrModify(o,r,i)})}_addOrUpdateGraphic(o,e){(0,F.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(o,e),s=this._getSymbolResources(o,e);return Promise.all([t,s]).then(([i,r])=>{(0,F.k_)(this._controller.signal),this._graphicsSet.has(o)&&this._graphicStore.addOrModify(o,r,i)})}_addTile(o){const e=this.view.featuresTilingScheme.getTileBounds((0,w.Ue)(),o),t=new ge(o,e[0],e[3]);return this._tiles.set(o,t),this.container.addChild(t),t}_addNewTile(o,e){var t=this;return(0,K.Z)(function*(){const s=t._addTile(o.key),i=t._graphicStore.queryTileData(t._templateStore,o);if(0===i.length)return;if(e){const n=Math.round((e.valid[1]-e.valid[0])/o.resolution);for(const a of i)a.geometry&&((0,I.wp)(a.geometry)||(0,I.aW)(a.geometry))&&t._wrapPoints(a,n)}const r=o.key;t._tileUpdateSet.add(o.key),t.notifyChange("updating");try{const n={type:"update",clear:!1,addOrUpdate:yield t._processGraphics(o,i),remove:[],end:!0,sort:!1};s.patch(n),t._tileUpdateSet.delete(r),t.notifyChange("updating")}catch(n){if(t._tileUpdateSet.delete(r),t.notifyChange("updating"),!(0,F.D_)(n))throw n}})()}_removeTile(o){if(!this._tiles.has(o))return;const e=this._tiles.get(o);this.container.removeChild(e),e.destroy(),this._tiles.delete(o)}_setFilterState(o,e){const t=this._displayIds.get(o),s=this._attributeStore.getHighlightFlag(o);this._attributeStore.setData(t,0,0,s|(e?g.Zd:0))}_getGraphicsData(o,e,t){const i=(0,b.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(o,e,t);if(i){const n=Math.round((i.valid[1]-i.valid[0])/e.resolution);for(const a of r)a.geometry&&((0,I.wp)(a.geometry)||(0,I.aW)(a.geometry))&&this._wrapPoints(a,n)}return r}_wrapPoints(o,e){const t=o.geometry;(0,I.aW)(t)?this._wrapMultipoint(t,e):this._wrapPoint(o,e)}_wrapMultipoint(o,e){const t=o.points,s=[];let i=0,r=0;for(const[n,a]of t){if(s.push([n+i,a]),i=0,e===z.I_){const h=5*z.y1;n+r<h?(s.push([e,0]),i=-e):n+r>z.I_-h&&(s.push([-e,0]),i=e)}else n+r<-z.y1?(s.push([e,0]),i=-e):n+r>z.I_+z.y1&&(s.push([-e,0]),i=e);r+=n}o.points=s}_wrapPoint(o,e){const t=o.geometry;if(e===z.I_){const s=5*z.y1;t.x<s?o.geometry={points:[[t.x,t.y],[e,0]]}:t.x>z.I_-s&&(o.geometry={points:[[t.x,t.y],[-e,0]]})}else t.x<-z.y1?o.geometry={points:[[t.x,t.y],[e,0]]}:t.x>z.I_+z.y1&&(o.geometry={points:[[t.x,t.y],[-e,0]]})}_processGraphics(o,e,t){if(!e||!e.length||!this._meshFactory)return null;const s=Fe.from(e,this.uid),i=this._meshFactory;return this._matcher.then(r=>i.analyzeGraphics(s,this.container.stage.resourceManager,r,null,null,t).then(()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(o,s))))}_processAnalyzedGraphics(o,e){const t=this._meshFactory,s=e.getSize(),i=e.getCursor(),n=new nt._(o.key.id,{features:s,records:s,metrics:0},m.mD.DEFAULT,!1,!1),a=[];for(;i.next();){const l=i.readGraphic();l.insertAfter=-1===l.insertAfter?-1:this._displayIds.get(l.insertAfter),l.displayId=this._displayIds.get(l.attributes[this.uid]);const y=new he(l.displayId);y.insertAfter=l.insertAfter,a.push(y),t.writeGraphic(n,i,o.level,this.container.stage.resourceManager)}const d=n.serialize(o.tileInfoView.tileInfo.isWrappable);return 1!==d.length?new Q:Q.fromVertexData(d[0].message,a)}_abortProcessingGraphic(o){this._graphicIdToAbortController.has(o)&&this._graphicIdToAbortController.get(o).abort()}_getNullSymbol(o){const e=o.geometry;return(0,I.l9)(e)?u.mW:(0,I.oU)(e)||(0,I.YX)(e)?u.kD:u.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};(0,O._)([(0,M.Cb)({constructOnly:!0})],ee.prototype,"requestUpdateCallback",void 0),(0,O._)([(0,M.Cb)()],ee.prototype,"container",void 0),(0,O._)([(0,M.Cb)({constructOnly:!0})],ee.prototype,"graphics",void 0),(0,O._)([(0,M.Cb)()],ee.prototype,"updating",null),(0,O._)([(0,M.Cb)()],ee.prototype,"view",void 0),(0,O._)([(0,M.Cb)()],ee.prototype,"updateRequested",void 0),ee=(0,O._)([(0,te.j)("esri.views.2d.layers.support.GraphicsView2D")],ee);const Ft=ee}}]);